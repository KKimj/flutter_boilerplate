// File generated by FlutterFire CLI.
// ignore_for_file: no_default_cases

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show TargetPlatform, defaultTargetPlatform, kIsWeb;

class FirebaseOptionsDevelopment {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'FirebaseOptionsMockup have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'FirebaseOptionsMockup are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'yourWebApiKey',
    appId: 'yourWebAppId',
    messagingSenderId: 'yourWebMessagingSenderId',
    projectId: 'yourProjectId',
    authDomain: 'yourAuthDomain',
    storageBucket: 'yourStorageBucket',
    measurementId: 'yourMeasurementId',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'yourAndroidApiKey',
    appId: 'yourAndroidAppId',
    messagingSenderId: 'yourAndroidMessagingSenderId',
    projectId: 'yourProjectId',
    storageBucket: 'yourStorageBucket',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'yourIosApiKey',
    appId: 'yourIosAppId',
    messagingSenderId: 'yourIosMessagingSenderId',
    projectId: 'yourProjectId',
    storageBucket: 'yourStorageBucket',
    iosBundleId: 'yourIosBundleId',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'yourMacosApiKey',
    appId: 'yourMacosAppId',
    messagingSenderId: 'yourMacosMessagingSenderId',
    projectId: 'yourProjectId',
    storageBucket: 'yourStorageBucket',
    iosBundleId: 'yourMacosBundleId',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'yourWindowsApiKey',
    appId: 'yourWindowsAppId',
    messagingSenderId: 'yourWindowsMessagingSenderId',
    projectId: 'yourProjectId',
    authDomain: 'yourAuthDomain',
    storageBucket: 'yourStorageBucket',
    measurementId: 'yourMeasurementId',
  );
}
